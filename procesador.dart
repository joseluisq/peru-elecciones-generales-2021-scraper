import 'dart:io';
import 'dart:convert';

// Generated by https://javiercbk.github.io/json_to_dart/ and adapted

class JsonResults {
  final Generals generals;
  final List<Results> results;
  final Summary summary;

  JsonResults({this.generals, this.results, this.summary});

  JsonResults.fromJson(Map<String, dynamic> json)
      : generals = Generals.fromJson(json['generals']),
        results =
            List<Results>.from(json['results'].map((r) => Results.fromJson(r))),
        summary = Summary.fromJson(json['summary']);

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.generals != null) {
      data['generals'] = this.generals.toJson();
    }
    if (this.results != null) {
      data['results'] = this.results.map((v) => v.toJson()).toList();
    }
    if (this.summary != null) {
      data['summary'] = this.summary.toJson();
    }
    return data;
  }
}

class Generals {
  final GeneralData generalData;
  final ActData actData;
  final String realImages;

  Generals({this.generalData, this.actData, this.realImages});

  Generals.fromJson(Map<String, dynamic> json)
      : generalData = GeneralData.fromJson(json['generalData']),
        actData = ActData.fromJson(json['actData']),
        realImages = json['realImages'];

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.generalData != null) {
      data['generalData'] = this.generalData.toJson();
    }
    if (this.actData != null) {
      data['actData'] = this.actData.toJson();
    }
    data['realImages'] = this.realImages;
    return data;
  }
}

class GeneralData {
  final String eLECTORESHABIL;
  final String tOTCIUDADANOSVOTARON;
  final String pORCIUDADANOSVOTARON;
  final String pORACTASCONTABILIZADAS;
  final String pORACTASPROCESADAS;
  final String aCTASPROCESADAS;
  final String pORPROCESAR;
  final String cONTABILIZA;
  final String pORPORPROCESAR;
  final String nCANDIDATOS;

  GeneralData(
      {this.eLECTORESHABIL,
      this.tOTCIUDADANOSVOTARON,
      this.pORCIUDADANOSVOTARON,
      this.pORACTASCONTABILIZADAS,
      this.pORACTASPROCESADAS,
      this.aCTASPROCESADAS,
      this.pORPROCESAR,
      this.cONTABILIZA,
      this.pORPORPROCESAR,
      this.nCANDIDATOS});

  GeneralData.fromJson(Map<String, dynamic> json)
      : eLECTORESHABIL = json['ELECTORES_HABIL'],
        tOTCIUDADANOSVOTARON = json['TOT_CIUDADANOS_VOTARON'],
        pORCIUDADANOSVOTARON = json['POR_CIUDADANOS_VOTARON'],
        pORACTASCONTABILIZADAS = json['POR_ACTAS_CONTABILIZADAS'],
        pORACTASPROCESADAS = json['POR_ACTAS_PROCESADAS'],
        aCTASPROCESADAS = json['ACTAS_PROCESADAS'],
        pORPROCESAR = json['POR_PROCESAR'],
        cONTABILIZA = json['CONTABILIZA'],
        pORPORPROCESAR = json['POR_POR_PROCESAR'],
        nCANDIDATOS = json['N_CANDIDATOS'];

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['ELECTORES_HABIL'] = this.eLECTORESHABIL;
    data['TOT_CIUDADANOS_VOTARON'] = this.tOTCIUDADANOSVOTARON;
    data['POR_CIUDADANOS_VOTARON'] = this.pORCIUDADANOSVOTARON;
    data['POR_ACTAS_CONTABILIZADAS'] = this.pORACTASCONTABILIZADAS;
    data['POR_ACTAS_PROCESADAS'] = this.pORACTASPROCESADAS;
    data['ACTAS_PROCESADAS'] = this.aCTASPROCESADAS;
    data['POR_PROCESAR'] = this.pORPROCESAR;
    data['CONTABILIZA'] = this.cONTABILIZA;
    data['POR_POR_PROCESAR'] = this.pORPORPROCESAR;
    data['N_CANDIDATOS'] = this.nCANDIDATOS;
    return data;
  }
}

class ActData {
  String fECHA;
  String hORA;
  String pORAVANCE;

  ActData({this.fECHA, this.hORA, this.pORAVANCE});

  ActData.fromJson(Map<String, dynamic> json) {
    fECHA = json['FECHA'];
    hORA = json['HORA'];
    pORAVANCE = json['POR_AVANCE'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['FECHA'] = this.fECHA;
    data['HORA'] = this.hORA;
    data['POR_AVANCE'] = this.pORAVANCE;
    return data;
  }
}

class Results {
  final String cCODIAGRUPOL;
  final String aGRUPACION;
  final String tOTALVOTOS;
  final String nLISTA;
  final String pORVALIDOS;
  final String pOREMITIDOS;
  final String nOMBREeCANDIDATO;
  final Null iMAGENAGRUPACION;
  final String pORCAVANCEACTA;
  final String aCTASCOMPUTADA;
  final String tOTALMESAS;

  Results(
      {this.cCODIAGRUPOL,
      this.aGRUPACION,
      this.tOTALVOTOS,
      this.nLISTA,
      this.pORVALIDOS,
      this.pOREMITIDOS,
      this.nOMBREeCANDIDATO,
      this.iMAGENAGRUPACION,
      this.pORCAVANCEACTA,
      this.aCTASCOMPUTADA,
      this.tOTALMESAS});

  Results.fromJson(Map<String, dynamic> json)
      : cCODIAGRUPOL = json['C_CODI_AGRUPOL'],
        aGRUPACION = json['AGRUPACION'],
        tOTALVOTOS = json['TOTAL_VOTOS'],
        nLISTA = json['NLISTA'],
        pORVALIDOS = json['POR_VALIDOS'],
        pOREMITIDOS = json['POR_EMITIDOS'],
        nOMBREeCANDIDATO = json['NOMBREe_CANDIDATO'],
        iMAGENAGRUPACION = json['IMAGENAGRUPACION'],
        pORCAVANCEACTA = json['PORC_AVANCE_ACTA'],
        aCTASCOMPUTADA = json['ACTAS_COMPUTADA'],
        tOTALMESAS = json['TOTAL_MESAS'];

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['C_CODI_AGRUPOL'] = this.cCODIAGRUPOL;
    data['AGRUPACION'] = this.aGRUPACION;
    data['TOTAL_VOTOS'] = this.tOTALVOTOS;
    data['NLISTA'] = this.nLISTA;
    data['POR_VALIDOS'] = this.pORVALIDOS;
    data['POR_EMITIDOS'] = this.pOREMITIDOS;
    data['NOMBREe_CANDIDATO'] = this.nOMBREeCANDIDATO;
    data['IMAGENAGRUPACION'] = this.iMAGENAGRUPACION;
    data['PORC_AVANCE_ACTA'] = this.pORCAVANCEACTA;
    data['ACTAS_COMPUTADA'] = this.aCTASCOMPUTADA;
    data['TOTAL_MESAS'] = this.tOTALMESAS;
    return data;
  }
}

class Summary {
  final String cCODIUBIGEO;
  final String cONTABILIZA;
  final String cONTNORMAL;
  final String iMPUGNADA;
  final String eRRORMAT;
  final String mESASINSTALADAS;
  final String aCTASPROCESADAS;
  final String sOLNULIDAD;
  final String iLEGIBLE;
  final String pENDIENTE;
  final String oTRASOBS;
  final String sINDATOS;
  final String cONTANULADA;
  final String pORPROCESAR;
  final String eXTRAVIADA;
  final String sINIESTRADA;
  final String iNCOMPLETA;
  final String sINFIRMA;
  final String aINSTALAR;
  final String mESASNOINST;
  final String fUSIONADAS;
  final String nTOTALAUTO;
  final String mESASHABILES;
  final String tOTCIUDADANOSVOTARON;
  final String eLECTORESHABIL;
  final String eLECTORESHABIL50;
  final String tOTALJEE;

  Summary(
      {this.cCODIUBIGEO,
      this.cONTABILIZA,
      this.cONTNORMAL,
      this.iMPUGNADA,
      this.eRRORMAT,
      this.mESASINSTALADAS,
      this.aCTASPROCESADAS,
      this.sOLNULIDAD,
      this.iLEGIBLE,
      this.pENDIENTE,
      this.oTRASOBS,
      this.sINDATOS,
      this.cONTANULADA,
      this.pORPROCESAR,
      this.eXTRAVIADA,
      this.sINIESTRADA,
      this.iNCOMPLETA,
      this.sINFIRMA,
      this.aINSTALAR,
      this.mESASNOINST,
      this.fUSIONADAS,
      this.nTOTALAUTO,
      this.mESASHABILES,
      this.tOTCIUDADANOSVOTARON,
      this.eLECTORESHABIL,
      this.eLECTORESHABIL50,
      this.tOTALJEE});

  Summary.fromJson(Map<String, dynamic> json)
      : cCODIUBIGEO = json['CCODI_UBIGEO'],
        cONTABILIZA = json['CONTABILIZA'],
        cONTNORMAL = json['CONT_NORMAL'],
        iMPUGNADA = json['IMPUGNADA'],
        eRRORMAT = json['ERROR_MAT'],
        mESASINSTALADAS = json['MESAS_INSTALADAS'],
        aCTASPROCESADAS = json['ACTAS_PROCESADAS'],
        sOLNULIDAD = json['SOL_NULIDAD'],
        iLEGIBLE = json['ILEGIBLE'],
        pENDIENTE = json['PENDIENTE'],
        oTRASOBS = json['OTRAS_OBS'],
        sINDATOS = json['SIN_DATOS'],
        cONTANULADA = json['CONT_ANULADA'],
        pORPROCESAR = json['POR_PROCESAR'],
        eXTRAVIADA = json['EXTRAVIADA'],
        sINIESTRADA = json['SINIESTRADA'],
        iNCOMPLETA = json['INCOMPLETA'],
        sINFIRMA = json['SIN_FIRMA'],
        aINSTALAR = json['A_INSTALAR'],
        mESASNOINST = json['MESAS_NO_INST'],
        fUSIONADAS = json['FUSIONADAS'],
        nTOTALAUTO = json['NTOTAL_AUTO'],
        mESASHABILES = json['MESAS_HABILES'],
        tOTCIUDADANOSVOTARON = json['TOT_CIUDADANOS_VOTARON'],
        eLECTORESHABIL = json['ELECTORES_HABIL'],
        eLECTORESHABIL50 = json['ELECTORES_HABIL_50'],
        tOTALJEE = json['TOTAL_JEE'];

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['CCODI_UBIGEO'] = this.cCODIUBIGEO;
    data['CONTABILIZA'] = this.cONTABILIZA;
    data['CONT_NORMAL'] = this.cONTNORMAL;
    data['IMPUGNADA'] = this.iMPUGNADA;
    data['ERROR_MAT'] = this.eRRORMAT;
    data['MESAS_INSTALADAS'] = this.mESASINSTALADAS;
    data['ACTAS_PROCESADAS'] = this.aCTASPROCESADAS;
    data['SOL_NULIDAD'] = this.sOLNULIDAD;
    data['ILEGIBLE'] = this.iLEGIBLE;
    data['PENDIENTE'] = this.pENDIENTE;
    data['OTRAS_OBS'] = this.oTRASOBS;
    data['SIN_DATOS'] = this.sINDATOS;
    data['CONT_ANULADA'] = this.cONTANULADA;
    data['POR_PROCESAR'] = this.pORPROCESAR;
    data['EXTRAVIADA'] = this.eXTRAVIADA;
    data['SINIESTRADA'] = this.sINIESTRADA;
    data['INCOMPLETA'] = this.iNCOMPLETA;
    data['SIN_FIRMA'] = this.sINFIRMA;
    data['A_INSTALAR'] = this.aINSTALAR;
    data['MESAS_NO_INST'] = this.mESASNOINST;
    data['FUSIONADAS'] = this.fUSIONADAS;
    data['NTOTAL_AUTO'] = this.nTOTALAUTO;
    data['MESAS_HABILES'] = this.mESASHABILES;
    data['TOT_CIUDADANOS_VOTARON'] = this.tOTCIUDADANOSVOTARON;
    data['ELECTORES_HABIL'] = this.eLECTORESHABIL;
    data['ELECTORES_HABIL_50'] = this.eLECTORESHABIL50;
    data['TOTAL_JEE'] = this.tOTALJEE;
    return data;
  }
}

void main() async {
  try {
    String jsonFilePath = 'elecciones_generales_2021.json';
    String jsonContent = await File(jsonFilePath).readAsString();
    var obj = JsonResults.fromJson(json.decode(jsonContent));

    // TODO: print HTML page using this JSON data
    print('Elecciones Generales 2021');
    print('-------------------------');
    print('Fecha: ${obj.generals.actData.fECHA}');
    print('Hora: ${obj.generals.actData.hORA}');
    print('Por Avance: ${obj.generals.actData.pORAVANCE.trim()}');
  } catch (ex) {
    throw ex;
  }
}
