import 'dart:convert' show json;
import 'dart:io' show File;

// Generated by https://javiercbk.github.io/json_to_dart/ and adapted at convenience

class JsonResults {
  final Generals generals;
  final List<Results> results;
  final Summary summary;

  JsonResults.fromJson(Map<String, dynamic> json)
      : generals = Generals.fromJson(json['generals'] as Map<String, dynamic>),
        results = (json['results'] as List<dynamic>)
            .map((r) => Results.fromJson(r as Map<String, dynamic>))
            .toList(),
        summary = Summary.fromJson(json['summary'] as Map<String, dynamic>);

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['generals'] = generals.toJson();
    data['results'] = results.map((v) => v.toJson()).toList();
    data['summary'] = summary.toJson();
    return data;
  }
}

class Generals {
  final GeneralData generalData;
  final ActData actData;
  final String realImages;

  Generals.fromJson(Map<String, dynamic> json)
      : generalData =
            GeneralData.fromJson(json['generalData'] as Map<String, dynamic>),
        actData = ActData.fromJson(json['actData'] as Map<String, dynamic>),
        realImages = json['realImages'] as String;

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['generalData'] = generalData.toJson();
    data['actData'] = actData.toJson();
    data['realImages'] = realImages;
    return data;
  }
}

class GeneralData {
  final String eLECTORESHABIL;
  final String tOTCIUDADANOSVOTARON;
  final String pORCIUDADANOSVOTARON;
  final String pORACTASCONTABILIZADAS;
  final String pORACTASPROCESADAS;
  final String aCTASPROCESADAS;
  final String pORPROCESAR;
  final String cONTABILIZA;
  final String pORPORPROCESAR;
  final String nCANDIDATOS;

  GeneralData.fromJson(Map<String, dynamic> json)
      : eLECTORESHABIL = json['ELECTORES_HABIL'] as String,
        tOTCIUDADANOSVOTARON = json['TOT_CIUDADANOS_VOTARON'] as String,
        pORCIUDADANOSVOTARON = json['POR_CIUDADANOS_VOTARON'] as String,
        pORACTASCONTABILIZADAS = json['POR_ACTAS_CONTABILIZADAS'] as String,
        pORACTASPROCESADAS = json['POR_ACTAS_PROCESADAS'] as String,
        aCTASPROCESADAS = json['ACTAS_PROCESADAS'] as String,
        pORPROCESAR = json['POR_PROCESAR'] as String,
        cONTABILIZA = json['CONTABILIZA'] as String,
        pORPORPROCESAR = json['POR_POR_PROCESAR'] as String,
        nCANDIDATOS = json['N_CANDIDATOS'] as String;

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['ELECTORES_HABIL'] = eLECTORESHABIL;
    data['TOT_CIUDADANOS_VOTARON'] = tOTCIUDADANOSVOTARON;
    data['POR_CIUDADANOS_VOTARON'] = pORCIUDADANOSVOTARON;
    data['POR_ACTAS_CONTABILIZADAS'] = pORACTASCONTABILIZADAS;
    data['POR_ACTAS_PROCESADAS'] = pORACTASPROCESADAS;
    data['ACTAS_PROCESADAS'] = aCTASPROCESADAS;
    data['POR_PROCESAR'] = pORPROCESAR;
    data['CONTABILIZA'] = cONTABILIZA;
    data['POR_POR_PROCESAR'] = pORPORPROCESAR;
    data['N_CANDIDATOS'] = nCANDIDATOS;
    return data;
  }
}

class ActData {
  final String fECHA;
  final String hORA;
  final String pORAVANCE;

  ActData.fromJson(Map<String, dynamic> json)
      : fECHA = json['FECHA'] as String,
        hORA = json['HORA'] as String,
        pORAVANCE = json['POR_AVANCE'] as String;

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['FECHA'] = fECHA;
    data['HORA'] = hORA;
    data['POR_AVANCE'] = pORAVANCE;
    return data;
  }
}

class Results {
  final String? cCODIAGRUPOL;
  final String aGRUPACION;
  final String tOTALVOTOS;
  final String? nLISTA;
  final String? pORVALIDOS;
  final String pOREMITIDOS;
  final String? nOMBREeCANDIDATO;
  final String? iMAGENAGRUPACION;
  final String? pORCAVANCEACTA;
  final String? aCTASCOMPUTADA;
  final String? tOTALMESAS;

  Results.fromJson(Map<String, dynamic> json)
      : cCODIAGRUPOL = json['C_CODI_AGRUPOL'] as String?,
        aGRUPACION = json['AGRUPACION'] as String,
        tOTALVOTOS = json['TOTAL_VOTOS'] as String,
        nLISTA = json['NLISTA'] as String?,
        pORVALIDOS = json['POR_VALIDOS'] as String?,
        pOREMITIDOS = json['POR_EMITIDOS'] as String,
        nOMBREeCANDIDATO = json['NOMBREe_CANDIDATO'] as String?,
        iMAGENAGRUPACION = json['IMAGENAGRUPACION'] as String?,
        pORCAVANCEACTA = json['PORC_AVANCE_ACTA'] as String?,
        aCTASCOMPUTADA = json['ACTAS_COMPUTADA'] as String?,
        tOTALMESAS = json['TOTAL_MESAS'] as String?;

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['C_CODI_AGRUPOL'] = cCODIAGRUPOL;
    data['AGRUPACION'] = aGRUPACION;
    data['TOTAL_VOTOS'] = tOTALVOTOS;
    data['NLISTA'] = nLISTA;
    data['POR_VALIDOS'] = pORVALIDOS;
    data['POR_EMITIDOS'] = pOREMITIDOS;
    data['NOMBREe_CANDIDATO'] = nOMBREeCANDIDATO;
    data['IMAGENAGRUPACION'] = iMAGENAGRUPACION;
    data['PORC_AVANCE_ACTA'] = pORCAVANCEACTA;
    data['ACTAS_COMPUTADA'] = aCTASCOMPUTADA;
    data['TOTAL_MESAS'] = tOTALMESAS;
    return data;
  }
}

class Summary {
  final String cCODIUBIGEO;
  final String cONTABILIZA;
  final String cONTNORMAL;
  final String iMPUGNADA;
  final String eRRORMAT;
  final String mESASINSTALADAS;
  final String aCTASPROCESADAS;
  final String sOLNULIDAD;
  final String iLEGIBLE;
  final String pENDIENTE;
  final String oTRASOBS;
  final String sINDATOS;
  final String cONTANULADA;
  final String pORPROCESAR;
  final String eXTRAVIADA;
  final String sINIESTRADA;
  final String iNCOMPLETA;
  final String sINFIRMA;
  final String aINSTALAR;
  final String mESASNOINST;
  final String fUSIONADAS;
  final String nTOTALAUTO;
  final String mESASHABILES;
  final String tOTCIUDADANOSVOTARON;
  final String eLECTORESHABIL;
  final String eLECTORESHABIL50;
  final String tOTALJEE;

  Summary.fromJson(Map<String, dynamic> json)
      : cCODIUBIGEO = json['CCODI_UBIGEO'] as String,
        cONTABILIZA = json['CONTABILIZA'] as String,
        cONTNORMAL = json['CONT_NORMAL'] as String,
        iMPUGNADA = json['IMPUGNADA'] as String,
        eRRORMAT = json['ERROR_MAT'] as String,
        mESASINSTALADAS = json['MESAS_INSTALADAS'] as String,
        aCTASPROCESADAS = json['ACTAS_PROCESADAS'] as String,
        sOLNULIDAD = json['SOL_NULIDAD'] as String,
        iLEGIBLE = json['ILEGIBLE'] as String,
        pENDIENTE = json['PENDIENTE'] as String,
        oTRASOBS = json['OTRAS_OBS'] as String,
        sINDATOS = json['SIN_DATOS'] as String,
        cONTANULADA = json['CONT_ANULADA'] as String,
        pORPROCESAR = json['POR_PROCESAR'] as String,
        eXTRAVIADA = json['EXTRAVIADA'] as String,
        sINIESTRADA = json['SINIESTRADA'] as String,
        iNCOMPLETA = json['INCOMPLETA'] as String,
        sINFIRMA = json['SIN_FIRMA'] as String,
        aINSTALAR = json['A_INSTALAR'] as String,
        mESASNOINST = json['MESAS_NO_INST'] as String,
        fUSIONADAS = json['FUSIONADAS'] as String,
        nTOTALAUTO = json['NTOTAL_AUTO'] as String,
        mESASHABILES = json['MESAS_HABILES'] as String,
        tOTCIUDADANOSVOTARON = json['TOT_CIUDADANOS_VOTARON'] as String,
        eLECTORESHABIL = json['ELECTORES_HABIL'] as String,
        eLECTORESHABIL50 = json['ELECTORES_HABIL_50'] as String,
        tOTALJEE = json['TOTAL_JEE'] as String;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    final data = map;
    data['CCODI_UBIGEO'] = cCODIUBIGEO;
    data['CONTABILIZA'] = cONTABILIZA;
    data['CONT_NORMAL'] = cONTNORMAL;
    data['IMPUGNADA'] = iMPUGNADA;
    data['ERROR_MAT'] = eRRORMAT;
    data['MESAS_INSTALADAS'] = mESASINSTALADAS;
    data['ACTAS_PROCESADAS'] = aCTASPROCESADAS;
    data['SOL_NULIDAD'] = sOLNULIDAD;
    data['ILEGIBLE'] = iLEGIBLE;
    data['PENDIENTE'] = pENDIENTE;
    data['OTRAS_OBS'] = oTRASOBS;
    data['SIN_DATOS'] = sINDATOS;
    data['CONT_ANULADA'] = cONTANULADA;
    data['POR_PROCESAR'] = pORPROCESAR;
    data['EXTRAVIADA'] = eXTRAVIADA;
    data['SINIESTRADA'] = sINIESTRADA;
    data['INCOMPLETA'] = iNCOMPLETA;
    data['SIN_FIRMA'] = sINFIRMA;
    data['A_INSTALAR'] = aINSTALAR;
    data['MESAS_NO_INST'] = mESASNOINST;
    data['FUSIONADAS'] = fUSIONADAS;
    data['NTOTAL_AUTO'] = nTOTALAUTO;
    data['MESAS_HABILES'] = mESASHABILES;
    data['TOT_CIUDADANOS_VOTARON'] = tOTCIUDADANOSVOTARON;
    data['ELECTORES_HABIL'] = eLECTORESHABIL;
    data['ELECTORES_HABIL_50'] = eLECTORESHABIL50;
    data['TOTAL_JEE'] = tOTALJEE;
    return data;
  }
}

Future<void> main() async {
  const jsonFilePath = 'elecciones_generales_2021.json';
  final jsonContent = await File(jsonFilePath).readAsString();
  final decode = json.decode(jsonContent) as Map<String, dynamic>;
  final obj = JsonResults.fromJson(decode);

  // TODO: print HTML page using this JSON data
  print('Elecciones Generales 2021');
  print('-------------------------');
  print('Fecha: ${obj.generals.actData.fECHA}');
  print('Hora: ${obj.generals.actData.hORA}');
  print('Por Avance: ${obj.generals.actData.pORAVANCE.trim()}');
  print('Por Avance: ${obj.results[0].tOTALVOTOS}');
}
